# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env
.env.*
!.env.example

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
.vuepress/dist

# vuepress v2.x temp and cache directory
.temp
.cache

# Sveltekit cache directory
.svelte-kit/

# vitepress build output
**/.vitepress/dist

# vitepress cache directory
**/.vitepress/cache

# Docusaurus cache and generated files
.docusaurus

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# Firebase cache directory
.firebase/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v3
.pnp.*
.yarn/*
!.yarn/patches
!.yarn/plugins
!.yarn/releases
!.yarn/sdks
!.yarn/versions

# Vite logs files
vite.config.js.timestamp-*
vite.config.ts.timestamp-*


##### VS 文件忽略

## 忽略 Visual Studio 临时文件、构建结果等 ##
*.suo
*.user
*.userosscache
*.sln.docstates
*.ncrunchsolution
*.ncrunchproject

# 用户特定文件
*.csproj.user
*.vbproj.user

# 构建结果
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/

# Visual Studio 2015/2017 缓存/选项目录
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# MSTest 测试结果
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUnit
*.VisualState.xml
TestResult.xml
nunit-*.xml

# 构建结果
*.cache
*.ilk
*.pdb
*.exe
*.dll
*.pch
*.exp
*.lib
*.xml
*.manifest
*.iobj
*.ipdb

# 打包目录
packages/
[Pp]ublish/
*.publishproj

# NuGet 包目录
.nuget/
*.nupkg
nuget.exe

# 项目引用
_ReSharper.*
*.sass-cache

# 文件缓存
*.cache

# 项目文件
*.db
*.db-shm
*.db-wal

# 其他文件
Thumbs.db
ehthumbs.db
[Dd]esktop.ini

# 忽略本地设置文件
app.config
appsettings.json
appsettings.*.json

# 忽略证书文件
*.pfx
*.p12
*.cer
*.crt
*.key

# 忽略输出目录
[Bb]in/
[Oo]bj/

# 忽略编译生成的程序集
!**/[Bb]in/Release/
!**/[Oo]bj/Release/

# 忽略 WPF 临时文件
*.tmp
*.temp

# 忽略资源文件缓存
*.ResourceCache

# 忽略符号文件
*.pdb
*.idb
*.ilk

# 忽略 Visual Studio 备份文件
*.[Cc]ache
*.bak
*.log
*.msi
*.msm
*.msp
*.sdf
*.opensdf
*.sln.ide

# 忽略本地化文件
*.resx
*.resources

# 忽略 Git 忽略文件
!.gitignore

# 忽略项目特定文件
*.csproj
*.vbproj
*.fsproj

# 忽略项目用户选项文件
*.userprefs

# 忽略 Mac 系统文件
.DS_Store

# 忽略 Rider 配置文件
.idea/

# 忽略 VS Code 配置文件
.vscode/

# 忽略编译输出 (但保留 Release 目录结构)
[Bb]in/[Dd]ebug/
[Bb]in/[Rr]elease/net35/
[Oo]bj/[Dd]ebug/
[Oo]bj/[Rr]elease/net35/

# 保留必要的构建目录结构 (可选)
!**/[Bb]in/
!**/[Oo]bj/

# 但忽略其中的文件
**/[Bb]in/*
**/[Oo]bj/*
!**/[Bb]in/Release/
!**/[Oo]bj/Release/

# 保留 Release 目录中的文件
!**/[Bb]in/Release/**
!**/[Oo]bj/Release/**

# 忽略 WPF 应用程序的本地设置文件
*.settings